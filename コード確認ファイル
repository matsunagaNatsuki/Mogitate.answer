<?php

#Laravelが用意している便利ツールを使えるようにする。
use Illuminate\Database\Migrations\Migration;//データベースの構造の変更
use Illuminate\Database\Schema\Blueprint;//テーブルの設計図を作るためのツール
use Illuminate\Support\Facades\Schema;//データベースの操作を行う

class CreateProductsTable extends Migration//このファイルの全体の名前で設計図のようなもの
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()//テーブルを作成したり新しい変更をデータベースに適用する。
    {
        Schema::create('products', function (Blueprint $table) { //データベースにproductsという新しいテーブルを作成しテーブルの中身を設計する
            $table->id();//商品の番号。
            $table->string('name');//商品名を保存
            $table->integer('price');//値段を保存。数字のみ入力可。
            $table->string('image')->nullable();//画像を保存。nullable=画像がない場合でもOK
            $table->text('description');//商品説明を保存。長い文章が入力できる
            $table->timestamp('create_at')->useCurrent()->nullable();
            $table->timestamp('update_at')->useCurrent()->nullable();
            /**データの作成と更新の時間を自動で保存する
                *useCurrent():=今の時刻を自動で設定する
                *nullable():=空でもOK**/
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()//upメソッドで作成した変更を削除し元に戻す
    {
        Schema::dropIfExists('products');
        //productsテーブルがデータベースに存在している場合、productsテーブルを削除し、テーブルが存在しない場合は何もせずに終了する。これによってエラーを防ぐ。
    }
}





<?php

#laravelの用意している便利なツールを使えるようにしている
use Illuminate\Database\Migrations\Migration;//データベースを変更するための機能
use Illuminate\Database\Schema\Blueprint;//テーブルの設計を簡単に記述するための仕組み。
use Illuminate\Support\Facades\Schema;//データベース構造を直接操作するためのツール

#CreateSeasonsTableという名前の設計図
class CreateSeasonsTable extends Migration //このクラスにテーブル作成や削除を行えるようにする
{
    /**
     * Run the migrations.
     *
     * @return void
     */

    #upメソッド
    public function up() //seasonsテーブルにに新しくデータの変更を行えるようにする
    {
        Schema::create('seasons', function (Blueprint $table) {
            //テーブルの中身を設計し、データベースに「seasons」という名前のテーブルを作成する
            $table->id();//データを区別するために「id」という列を作り、自動で番号が振られる
            $table->string('name');//季節の名前を保存する列
            $table->timestamp('created_at')->useCurrent()->nullable();
            $table->timestamp('updated_at')->useCurrent()->nullable();
            //作成日時と更新日時を自動で保存する
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */

    #downメソッド
    public function down()//upメソッドで作成した変更を削除し元に戻す
    {
        Schema::dropIfExists('seasons');
        //seasonsテーブルがデータベースに存在している場合、seasonsテーブルを削除し、テーブルが存在しない場合は何もせずに終了する。これによってエラーを防ぐ。
    }
}




<?php

/**このテーブルは中間テーブル（多対多の関係）を管理するためのテーブル。
 * 例：商品Id１の「商品」は季節Id３の「秋」の季節である*/




#laravelのフレームワークでデータベースを行う際に必要な機能やクラスを取り入れている
use Illuminate\Database\Migrations\Migration;
/**データベースにテーブルの列の追加や削除などを管理する
 * 例：upメソッドとdownメソッドを使ってテーブルの作成や削除を行う**/

use Illuminate\Database\Schema\Blueprint;
/**データベースのテーブル構造を設計するための便利なメソッドを提供する
 * 例：テーブルに「文字列型の列」や「ID」列を作成などを行う。*/

use Illuminate\Support\Facades\Schema;
/**データベースの構造を操作する機能
 * 例：データベースのテーブルの作成や変更、削除を行う*/

#Product_seasonテーブルを作成するための設計図
class CreateProductSeasonTable extends Migration
//Migrationクラスを継承し、テーブルの列の追加や削除などを管理する機能を使用する
{
    /**
     * Run the migrations.
     *
     * @return void
     */

    #upメソッド
    public function up()//テーブルを作成するコードを記述する
    {
        Schema::create('product_season', function (Blueprint $table) {
            //product_seasonsという名前のテーブルを作成し、テーブルの項目を記述する
            $table->id();//データを区別するために自動でid番号を作成する
            $table->foreignId('product_id');
            /**productsのデータと関連つけるための外部キー
             * 例：この商品がどの季節に関連しているかを記録する**/

            $table->foreignId('season_id');
            /**seasonsテーブルと関連づける
             * 例：この季節がどの商品に関連しているかを記録する */
            $table->timestamp('created_at')->useCurrent()->nullable();
            $table->timestamp('updated_at')->useCurrent()->nullable();
            //自動で作成日時と更新日時を記録する
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */

    #downメソッド
    public function down()//upメソッドで作成したテーブルを削除する処理を行い、それを行うことでデータベースを元の状態に戻すことができる
    {
        Schema::dropIfExists('product_season');
        //product_seasonテーブルが存在していれば削除し、存在してなければそのまま終了する
    }
}



<?php

/**sessionsテーブルをデータベースに作成し、ユーザーのセッション情報を管理するためのテーブル。
 * セッション情報とはユーザーがどのような活動をしているかを追跡し記録を行うデータ。
 * これを行うことで、ユーザー体験を向上させたり、安全な接続の維持ができる
 */


use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateProductSessionsTable extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('sessions', function (Blueprint $table) {
            //sessionsというテーブルを作成し、テーブルに必要な列（カラム）を定義する
            $table->string('id')->primary();
            //セッションを区別する番号や文字列が保存される

            $table->foreignId('user_id')->nullable()->index();
            //インデックスを作成して、user_idを検索する速度を早くし、このユーザーがどのセッションを利用しているかを保存する。

            $table->string('ip_address', 45)->nullable();
            /**IPアドレスのデータ型を文字列として定義し、保存します。
             * IPv4（最大15文字）とIPv6（最大45文字）に対応できます。
             * IPアドレスは、どこから接続しているかを示す情報です。*/

            $table->text('useragent')->nullable();
            //ユーザーが使用しているブラウザやデバイスの情報を保存する。
            $table->text('payload');
            //カート内の商品情報などセッションごとに保持したい情報が格納される。

            $table->integer('last_activity')->index();
            //検索速度を向上させるためにインデックスコードを追加し、ユーザーが最後に何か操作を行なった日時を保存する
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('sessions');
    }
}

